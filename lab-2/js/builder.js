// –ó–∞–≤–¥–∞–Ω–Ω—è 5: –ë—É–¥—ñ–≤–µ–ª—å–Ω–∏–∫
// –ë–∞–∑–æ–≤–∏–π –∫–ª–∞—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
class Character {
  constructor() {
    this.height = null;
    this.bodyType = null;
    this.hairColor = null;
    this.eyeColor = null;
    this.clothing = null;
    this.inventory = [];
    this.alignment = null;
    this.actions = [];
  }

  // –í–∏–≤—ñ–¥ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
  showInfo() {
    console.log(`–ü–µ—Ä—Å–æ–Ω–∞–∂:`);
    console.log(`–ó—Ä—ñ—Å—Ç: ${this.height}`);
    console.log(`–°—Ç–∞—Ç—É—Ä–∞: ${this.bodyType}`);
    console.log(`–ö–æ–ª—ñ—Ä –≤–æ–ª–æ—Å—Å—è: ${this.hairColor}`);
    console.log(`–ö–æ–ª—ñ—Ä –æ—á–µ–π: ${this.eyeColor}`);
    console.log(`–û–¥—è–≥: ${this.clothing}`);
    console.log(`–Ü–Ω–≤–µ–Ω—Ç–∞—Ä: ${this.inventory.join(", ")}`);
    console.log(`–°—Ç–æ—Ä–æ–Ω–∞: ${this.alignment}`);
    console.log(`–î—ñ—ó: ${this.actions.join(", ")}`);
    console.log("=====================================");
  }
}

// –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—É–¥—ñ–≤–µ–ª—å–Ω–∏–∫–∞
class CharacterBuilder {
  constructor() {
    this.character = new Character();
  }

  setHeight(height) {
    this.character.height = height;
    return this;
  }

  setBodyType(bodyType) {
    this.character.bodyType = bodyType;
    return this;
  }

  setHairColor(hairColor) {
    this.character.hairColor = hairColor;
    return this;
  }

  setEyeColor(eyeColor) {
    this.character.eyeColor = eyeColor;
    return this;
  }

  setClothing(clothing) {
    this.character.clothing = clothing;
    return this;
  }

  addInventoryItem(item) {
    this.character.inventory.push(item);
    return this;
  }

  setAlignment(alignment) {
    this.character.alignment = alignment;
    return this;
  }

  addAction(action) {
    this.character.actions.push(action);
    return this;
  }

  build() {
    return this.character;
  }
}

// –ë—É–¥—ñ–≤–µ–ª—å–Ω–∏–∫ –ì–µ—Ä–æ—è
class HeroBuilder extends CharacterBuilder {
  constructor() {
    super();
    this.setAlignment("–î–æ–±—Ä–æ");
  }

  addHeroicAction(action) {
    this.character.actions.push(`${action}`);
    return this;
  }
}

// –ë—É–¥—ñ–≤–µ–ª—å–Ω–∏–∫ –í–æ—Ä–æ–≥–∞
class EnemyBuilder extends CharacterBuilder {
  constructor() {
    super();
    this.setAlignment("–ó–ª–æ");
  }

  addEvilAction(action) {
    this.character.actions.push(`${action}`);
    return this;
  }
}

// –î–∏—Ä–µ–∫—Ç–æ—Ä –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤
class CharacterDirector {
  static createHero(builder) {
    return builder
      .setHeight("180 —Å–º")
      .setBodyType("–ê—Ç–ª–µ—Ç")
      .setHairColor("–ß–æ—Ä–Ω–∏–π")
      .setEyeColor("–°–∏–Ω—ñ–π")
      .setClothing("–õ–∏—Ü–∞—Ä—Å—å–∫—ñ –æ–±–ª–∞–¥—É–Ω–∫–∏")
      .addInventoryItem("–ú–µ—á")
      .addInventoryItem("–©–∏—Ç")
      .addHeroicAction("–†—è—Ç—É—î –ª—é–¥–µ–π")
      .addHeroicAction("–ë–æ—Ä–µ—Ç—å—Å—è –∑—ñ –∑–ª–æ–º")
      .build();
  }

  static createEnemy(builder) {
    return builder
      .setHeight("190 —Å–º")
      .setBodyType("–ú—ñ—Ü–Ω–∏–π")
      .setHairColor("–°–∏–≤–∏–π")
      .setEyeColor("–ß–µ—Ä–≤–æ–Ω–∏–π")
      .setClothing("–¢–µ–º–Ω–∏–π –ø–ª–∞—â")
      .addInventoryItem("–û—Ç—Ä—É—î–Ω–∏–π –∫–∏–Ω–¥–∂–∞–ª")
      .addInventoryItem("–¢–µ–º–Ω–∞ –º–∞–≥—ñ—è")
      .addEvilAction("–ì—Ä–∞–±—É—î —Å–µ–ª–∞")
      .addEvilAction("–°—Ç–≤–æ—Ä—é—î –∞—Ä–º—ñ—é –º–æ–Ω—Å—Ç—Ä—ñ–≤")
      .build();
  }
}

// üé¨ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è
console.log("===== –ó–∞–≤–¥–∞–Ω–Ω—è 5: –ë—É–¥—ñ–≤–µ–ª—å–Ω–∏–∫ =====");
const hero = CharacterDirector.createHero(new HeroBuilder());
const enemy = CharacterDirector.createEnemy(new EnemyBuilder());

hero.showInfo();
enemy.showInfo();
